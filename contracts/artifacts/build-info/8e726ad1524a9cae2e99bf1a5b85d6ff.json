{
	"id": "8e726ad1524a9cae2e99bf1a5b85d6ff",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ErrorHandler.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ncontract ErrorHandlerDemo{\n    uint balance = 100;\n\n    function deductBalRevert(uint _amount) public returns(uint){\n        if(_amount < 2){\n            revert(\"Input amount is not valid!\");\n        }\n\n        balance = balance - _amount;\n        return balance;\n    }\n\n    function deductBalRequire(uint _amount) public returns(uint){\n        require(_amount > 1, \"Input amount is not valid!\");\n\n        balance = balance - _amount;\n        return balance;\n    }\n\n    function deductBalAssert(uint _amount) public returns(uint){\n        assert(_amount > 1);\n\n        balance = balance - _amount;\n        return balance;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ErrorHandler.sol": {
				"ErrorHandlerDemo": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deductBalAssert",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deductBalRequire",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deductBalRevert",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ErrorHandler.sol\":56:685  contract ErrorHandlerDemo{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ErrorHandler.sol\":102:105  100 */\n  0x64\n    /* \"contracts/ErrorHandler.sol\":87:105  uint balance = 100 */\n  0x00\n  sstore\n    /* \"contracts/ErrorHandler.sol\":56:685  contract ErrorHandlerDemo{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ErrorHandler.sol\":56:685  contract ErrorHandlerDemo{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0caba826\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe92b2dc6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf3008cd2\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ErrorHandler.sol\":526:683  function deductBalAssert(uint _amount) public returns(uint){... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ErrorHandler.sol\":331:520  function deductBalRequire(uint _amount) public returns(uint){... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ErrorHandler.sol\":112:325  function deductBalRevert(uint _amount) public returns(uint){... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ErrorHandler.sol\":526:683  function deductBalAssert(uint _amount) public returns(uint){... */\n    tag_9:\n        /* \"contracts/ErrorHandler.sol\":580:584  uint */\n      0x00\n        /* \"contracts/ErrorHandler.sol\":612:613  1 */\n      0x01\n        /* \"contracts/ErrorHandler.sol\":602:609  _amount */\n      dup3\n        /* \"contracts/ErrorHandler.sol\":602:613  _amount > 1 */\n      gt\n        /* \"contracts/ErrorHandler.sol\":595:614  assert(_amount > 1) */\n      tag_21\n      jumpi\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n    tag_21:\n        /* \"contracts/ErrorHandler.sol\":645:652  _amount */\n      dup2\n        /* \"contracts/ErrorHandler.sol\":635:642  balance */\n      sload(0x00)\n        /* \"contracts/ErrorHandler.sol\":635:652  balance - _amount */\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"contracts/ErrorHandler.sol\":625:632  balance */\n      0x00\n        /* \"contracts/ErrorHandler.sol\":625:652  balance = balance - _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ErrorHandler.sol\":669:676  balance */\n      sload(0x00)\n        /* \"contracts/ErrorHandler.sol\":662:676  return balance */\n      swap1\n      pop\n        /* \"contracts/ErrorHandler.sol\":526:683  function deductBalAssert(uint _amount) public returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ErrorHandler.sol\":331:520  function deductBalRequire(uint _amount) public returns(uint){... */\n    tag_14:\n        /* \"contracts/ErrorHandler.sol\":386:390  uint */\n      0x00\n        /* \"contracts/ErrorHandler.sol\":419:420  1 */\n      0x01\n        /* \"contracts/ErrorHandler.sol\":409:416  _amount */\n      dup3\n        /* \"contracts/ErrorHandler.sol\":409:420  _amount > 1 */\n      gt\n        /* \"contracts/ErrorHandler.sol\":401:451  require(_amount > 1, \"Input amount is not valid!\") */\n      tag_27\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n        /* \"contracts/ErrorHandler.sol\":482:489  _amount */\n      dup2\n        /* \"contracts/ErrorHandler.sol\":472:479  balance */\n      sload(0x00)\n        /* \"contracts/ErrorHandler.sol\":472:489  balance - _amount */\n      tag_30\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_30:\n        /* \"contracts/ErrorHandler.sol\":462:469  balance */\n      0x00\n        /* \"contracts/ErrorHandler.sol\":462:489  balance = balance - _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ErrorHandler.sol\":506:513  balance */\n      sload(0x00)\n        /* \"contracts/ErrorHandler.sol\":499:513  return balance */\n      swap1\n      pop\n        /* \"contracts/ErrorHandler.sol\":331:520  function deductBalRequire(uint _amount) public returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ErrorHandler.sol\":112:325  function deductBalRevert(uint _amount) public returns(uint){... */\n    tag_18:\n        /* \"contracts/ErrorHandler.sol\":166:170  uint */\n      0x00\n        /* \"contracts/ErrorHandler.sol\":194:195  2 */\n      0x02\n        /* \"contracts/ErrorHandler.sol\":184:191  _amount */\n      dup3\n        /* \"contracts/ErrorHandler.sol\":184:195  _amount < 2 */\n      lt\n        /* \"contracts/ErrorHandler.sol\":181:257  if(_amount < 2){... */\n      iszero\n      tag_32\n      jumpi\n        /* \"contracts/ErrorHandler.sol\":210:246  revert(\"Input amount is not valid!\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap1\n      tag_29\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ErrorHandler.sol\":181:257  if(_amount < 2){... */\n    tag_32:\n        /* \"contracts/ErrorHandler.sol\":287:294  _amount */\n      dup2\n        /* \"contracts/ErrorHandler.sol\":277:284  balance */\n      sload(0x00)\n        /* \"contracts/ErrorHandler.sol\":277:294  balance - _amount */\n      tag_34\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_34:\n        /* \"contracts/ErrorHandler.sol\":267:274  balance */\n      0x00\n        /* \"contracts/ErrorHandler.sol\":267:294  balance = balance - _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ErrorHandler.sol\":311:318  balance */\n      sload(0x00)\n        /* \"contracts/ErrorHandler.sol\":304:318  return balance */\n      swap1\n      pop\n        /* \"contracts/ErrorHandler.sol\":112:325  function deductBalRevert(uint _amount) public returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_36:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_38\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_8:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_41\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":228:347   */\n    tag_41:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_44\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_36\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:853   */\n    tag_45:\n        /* \"#utility.yul\":629:632   */\n      0x00\n        /* \"#utility.yul\":650:717   */\n      tag_47\n        /* \"#utility.yul\":714:716   */\n      0x1a\n        /* \"#utility.yul\":709:712   */\n      dup4\n        /* \"#utility.yul\":650:717   */\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":643:717   */\n      swap2\n      pop\n        /* \"#utility.yul\":726:819   */\n      tag_49\n        /* \"#utility.yul\":815:818   */\n      dup3\n        /* \"#utility.yul\":726:819   */\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":844:846   */\n      0x20\n        /* \"#utility.yul\":839:842   */\n      dup3\n        /* \"#utility.yul\":835:847   */\n      add\n        /* \"#utility.yul\":828:847   */\n      swap1\n      pop\n        /* \"#utility.yul\":487:853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":859:977   */\n    tag_51:\n        /* \"#utility.yul\":946:970   */\n      tag_53\n        /* \"#utility.yul\":964:969   */\n      dup2\n        /* \"#utility.yul\":946:970   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":941:944   */\n      dup3\n        /* \"#utility.yul\":934:971   */\n      mstore\n        /* \"#utility.yul\":859:977   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":983:1402   */\n    tag_29:\n        /* \"#utility.yul\":1149:1153   */\n      0x00\n        /* \"#utility.yul\":1187:1189   */\n      0x20\n        /* \"#utility.yul\":1176:1185   */\n      dup3\n        /* \"#utility.yul\":1172:1190   */\n      add\n        /* \"#utility.yul\":1164:1190   */\n      swap1\n      pop\n        /* \"#utility.yul\":1236:1245   */\n      dup2\n        /* \"#utility.yul\":1230:1234   */\n      dup2\n        /* \"#utility.yul\":1226:1246   */\n      sub\n        /* \"#utility.yul\":1222:1223   */\n      0x00\n        /* \"#utility.yul\":1211:1220   */\n      dup4\n        /* \"#utility.yul\":1207:1224   */\n      add\n        /* \"#utility.yul\":1200:1247   */\n      mstore\n        /* \"#utility.yul\":1264:1395   */\n      tag_56\n        /* \"#utility.yul\":1390:1394   */\n      dup2\n        /* \"#utility.yul\":1264:1395   */\n      tag_45\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1256:1395   */\n      swap1\n      pop\n        /* \"#utility.yul\":983:1402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1408:1630   */\n    tag_11:\n        /* \"#utility.yul\":1501:1505   */\n      0x00\n        /* \"#utility.yul\":1539:1541   */\n      0x20\n        /* \"#utility.yul\":1528:1537   */\n      dup3\n        /* \"#utility.yul\":1524:1542   */\n      add\n        /* \"#utility.yul\":1516:1542   */\n      swap1\n      pop\n        /* \"#utility.yul\":1552:1623   */\n      tag_58\n        /* \"#utility.yul\":1620:1621   */\n      0x00\n        /* \"#utility.yul\":1609:1618   */\n      dup4\n        /* \"#utility.yul\":1605:1622   */\n      add\n        /* \"#utility.yul\":1596:1602   */\n      dup5\n        /* \"#utility.yul\":1552:1623   */\n      tag_51\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1408:1630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1717:1886   */\n    tag_48:\n        /* \"#utility.yul\":1801:1812   */\n      0x00\n        /* \"#utility.yul\":1835:1841   */\n      dup3\n        /* \"#utility.yul\":1830:1833   */\n      dup3\n        /* \"#utility.yul\":1823:1842   */\n      mstore\n        /* \"#utility.yul\":1875:1879   */\n      0x20\n        /* \"#utility.yul\":1870:1873   */\n      dup3\n        /* \"#utility.yul\":1866:1880   */\n      add\n        /* \"#utility.yul\":1851:1880   */\n      swap1\n      pop\n        /* \"#utility.yul\":1717:1886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1892:2083   */\n    tag_25:\n        /* \"#utility.yul\":1932:1936   */\n      0x00\n        /* \"#utility.yul\":1952:1972   */\n      tag_63\n        /* \"#utility.yul\":1970:1971   */\n      dup3\n        /* \"#utility.yul\":1952:1972   */\n      tag_54\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1947:1972   */\n      swap2\n      pop\n        /* \"#utility.yul\":1986:2006   */\n      tag_64\n        /* \"#utility.yul\":2004:2005   */\n      dup4\n        /* \"#utility.yul\":1986:2006   */\n      tag_54\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1981:2006   */\n      swap3\n      pop\n        /* \"#utility.yul\":2025:2026   */\n      dup3\n        /* \"#utility.yul\":2022:2023   */\n      dup3\n        /* \"#utility.yul\":2019:2027   */\n      lt\n        /* \"#utility.yul\":2016:2050   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2030:2048   */\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2016:2050   */\n    tag_65:\n        /* \"#utility.yul\":2075:2076   */\n      dup3\n        /* \"#utility.yul\":2072:2073   */\n      dup3\n        /* \"#utility.yul\":2068:2077   */\n      sub\n        /* \"#utility.yul\":2060:2077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1892:2083   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2089:2166   */\n    tag_54:\n        /* \"#utility.yul\":2126:2133   */\n      0x00\n        /* \"#utility.yul\":2155:2160   */\n      dup2\n        /* \"#utility.yul\":2144:2160   */\n      swap1\n      pop\n        /* \"#utility.yul\":2089:2166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2172:2352   */\n    tag_23:\n        /* \"#utility.yul\":2220:2297   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2217:2218   */\n      0x00\n        /* \"#utility.yul\":2210:2298   */\n      mstore\n        /* \"#utility.yul\":2317:2321   */\n      0x01\n        /* \"#utility.yul\":2314:2315   */\n      0x04\n        /* \"#utility.yul\":2307:2322   */\n      mstore\n        /* \"#utility.yul\":2341:2345   */\n      0x24\n        /* \"#utility.yul\":2338:2339   */\n      0x00\n        /* \"#utility.yul\":2331:2346   */\n      revert\n        /* \"#utility.yul\":2358:2538   */\n    tag_67:\n        /* \"#utility.yul\":2406:2483   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2403:2404   */\n      0x00\n        /* \"#utility.yul\":2396:2484   */\n      mstore\n        /* \"#utility.yul\":2503:2507   */\n      0x11\n        /* \"#utility.yul\":2500:2501   */\n      0x04\n        /* \"#utility.yul\":2493:2508   */\n      mstore\n        /* \"#utility.yul\":2527:2531   */\n      0x24\n        /* \"#utility.yul\":2524:2525   */\n      0x00\n        /* \"#utility.yul\":2517:2532   */\n      revert\n        /* \"#utility.yul\":2667:2784   */\n    tag_43:\n        /* \"#utility.yul\":2776:2777   */\n      0x00\n        /* \"#utility.yul\":2773:2774   */\n      dup1\n        /* \"#utility.yul\":2766:2778   */\n      revert\n        /* \"#utility.yul\":2790:2966   */\n    tag_50:\n        /* \"#utility.yul\":2930:2958   */\n      0x496e70757420616d6f756e74206973206e6f742076616c696421000000000000\n        /* \"#utility.yul\":2926:2927   */\n      0x00\n        /* \"#utility.yul\":2918:2924   */\n      dup3\n        /* \"#utility.yul\":2914:2928   */\n      add\n        /* \"#utility.yul\":2907:2959   */\n      mstore\n        /* \"#utility.yul\":2790:2966   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2972:3094   */\n    tag_39:\n        /* \"#utility.yul\":3045:3069   */\n      tag_76\n        /* \"#utility.yul\":3063:3068   */\n      dup2\n        /* \"#utility.yul\":3045:3069   */\n      tag_54\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3038:3043   */\n      dup2\n        /* \"#utility.yul\":3035:3070   */\n      eq\n        /* \"#utility.yul\":3025:3088   */\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3084:3085   */\n      0x00\n        /* \"#utility.yul\":3081:3082   */\n      dup1\n        /* \"#utility.yul\":3074:3086   */\n      revert\n        /* \"#utility.yul\":3025:3088   */\n    tag_77:\n        /* \"#utility.yul\":2972:3094   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202b78b48501dd3dca49153cb9619ab10d2ab936babccd6752404e6081c03b19ba64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052606460005534801561001557600080fd5b506103a5806100256000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630caba82614610046578063e92b2dc614610076578063f3008cd2146100a6575b600080fd5b610060600480360381019061005b91906101e3565b6100d6565b60405161006d9190610262565b60405180910390f35b610090600480360381019061008b91906101e3565b610107565b60405161009d9190610262565b60405180910390f35b6100c060048036038101906100bb91906101e3565b61016a565b6040516100cd9190610262565b60405180910390f35b6000600182116100e9576100e86102cc565b5b816000546100f7919061028e565b6000819055506000549050919050565b60006001821161014c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014390610242565b60405180910390fd5b8160005461015a919061028e565b6000819055506000549050919050565b600060028210156101b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a790610242565b60405180910390fd5b816000546101be919061028e565b6000819055506000549050919050565b6000813590506101dd81610358565b92915050565b6000602082840312156101f9576101f861032a565b5b6000610207848285016101ce565b91505092915050565b600061021d601a8361027d565b91506102288261032f565b602082019050919050565b61023c816102c2565b82525050565b6000602082019050818103600083015261025b81610210565b9050919050565b60006020820190506102776000830184610233565b92915050565b600082825260208201905092915050565b6000610299826102c2565b91506102a4836102c2565b9250828210156102b7576102b66102fb565b5b828203905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f496e70757420616d6f756e74206973206e6f742076616c696421000000000000600082015250565b610361816102c2565b811461036c57600080fd5b5056fea26469706673582212202b78b48501dd3dca49153cb9619ab10d2ab936babccd6752404e6081c03b19ba64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A5 DUP1 PUSH2 0x25 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCABA826 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xE92B2DC6 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF3008CD2 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x107 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 GT PUSH2 0xE9 JUMPI PUSH2 0xE8 PUSH2 0x2CC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 SLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x28E JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 GT PUSH2 0x14C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143 SWAP1 PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 SLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x28E JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7 SWAP1 PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 SLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x28E JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DD DUP2 PUSH2 0x358 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9 JUMPI PUSH2 0x1F8 PUSH2 0x32A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x207 DUP5 DUP3 DUP6 ADD PUSH2 0x1CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D PUSH1 0x1A DUP4 PUSH2 0x27D JUMP JUMPDEST SWAP2 POP PUSH2 0x228 DUP3 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23C DUP2 PUSH2 0x2C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25B DUP2 PUSH2 0x210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x277 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299 DUP3 PUSH2 0x2C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A4 DUP4 PUSH2 0x2C2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2B7 JUMPI PUSH2 0x2B6 PUSH2 0x2FB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x496E70757420616D6F756E74206973206E6F742076616C696421000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x361 DUP2 PUSH2 0x2C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B PUSH25 0xB48501DD3DCA49153CB9619AB10D2AB936BABCCD6752404E60 DUP2 0xC0 EXTCODESIZE NOT 0xBA PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:629:0:-:0;;;102:3;87:18;;56:629;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deductBalAssert_74": {
									"entryPoint": 214,
									"id": 74,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@deductBalRequire_52": {
									"entryPoint": 263,
									"id": 52,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@deductBalRevert_29": {
									"entryPoint": 362,
									"id": 29,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 716,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 763,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3097:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "709:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "714:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "650:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "650:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "643:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "815:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb",
																	"nodeType": "YulIdentifier",
																	"src": "726:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "828:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "839:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "844:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "828:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "621:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "629:3:1",
														"type": ""
													}
												],
												"src": "487:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "924:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "941:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "964:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "946:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "946:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "934:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "934:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "934:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "912:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "919:3:1",
														"type": ""
													}
												],
												"src": "859:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1164:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1176:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1187:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1172:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1164:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1211:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1222:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1207:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1207:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1230:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1236:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1226:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1226:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1200:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1390:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1264:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1264:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1256:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1134:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1149:4:1",
														"type": ""
													}
												],
												"src": "983:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1506:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1516:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1528:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1524:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1516:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1596:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1609:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1620:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1605:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1605:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1552:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1552:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1478:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1490:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1501:4:1",
														"type": ""
													}
												],
												"src": "1408:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1676:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1686:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1702:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1696:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1669:6:1",
														"type": ""
													}
												],
												"src": "1636:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1813:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1830:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1835:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1851:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1870:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1866:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1866:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1851:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1785:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1790:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1801:11:1",
														"type": ""
													}
												],
												"src": "1717:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1937:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1947:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1970:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1952:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1947:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1981:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2004:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1986:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1986:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1981:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2028:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2030:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2030:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2030:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2022:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2025:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2019:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:8:1"
															},
															"nodeType": "YulIf",
															"src": "2016:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2060:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2072:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2075:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2068:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2068:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2060:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1923:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1926:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1932:4:1",
														"type": ""
													}
												],
												"src": "1892:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2134:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2144:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2155:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2144:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2116:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2126:7:1",
														"type": ""
													}
												],
												"src": "2089:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2200:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2217:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2210:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2210:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2210:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2314:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2317:4:1",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2307:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2307:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2338:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2341:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2331:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2331:15:1"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "2172:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2403:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2406:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2396:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2396:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2500:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2503:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2493:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2493:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2493:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2524:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2527:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2517:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2358:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2633:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2650:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2653:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2643:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2643:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2643:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2544:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2756:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2773:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2776:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2766:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2766:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2667:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2896:70:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2918:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2926:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2914:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2914:14:1"
																	},
																	{
																		"hexValue": "496e70757420616d6f756e74206973206e6f742076616c696421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2930:28:1",
																		"type": "",
																		"value": "Input amount is not valid!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2907:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2907:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2907:52:1"
														}
													]
												},
												"name": "store_literal_in_memory_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2888:6:1",
														"type": ""
													}
												],
												"src": "2790:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3015:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3072:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3081:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3084:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3074:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3074:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3074:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3038:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3063:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3045:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3045:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3035:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3035:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3028:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3028:43:1"
															},
															"nodeType": "YulIf",
															"src": "3025:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3008:5:1",
														"type": ""
													}
												],
												"src": "2972:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_stringliteral_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_stringliteral_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Input amount is not valid!\")\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630caba82614610046578063e92b2dc614610076578063f3008cd2146100a6575b600080fd5b610060600480360381019061005b91906101e3565b6100d6565b60405161006d9190610262565b60405180910390f35b610090600480360381019061008b91906101e3565b610107565b60405161009d9190610262565b60405180910390f35b6100c060048036038101906100bb91906101e3565b61016a565b6040516100cd9190610262565b60405180910390f35b6000600182116100e9576100e86102cc565b5b816000546100f7919061028e565b6000819055506000549050919050565b60006001821161014c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014390610242565b60405180910390fd5b8160005461015a919061028e565b6000819055506000549050919050565b600060028210156101b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a790610242565b60405180910390fd5b816000546101be919061028e565b6000819055506000549050919050565b6000813590506101dd81610358565b92915050565b6000602082840312156101f9576101f861032a565b5b6000610207848285016101ce565b91505092915050565b600061021d601a8361027d565b91506102288261032f565b602082019050919050565b61023c816102c2565b82525050565b6000602082019050818103600083015261025b81610210565b9050919050565b60006020820190506102776000830184610233565b92915050565b600082825260208201905092915050565b6000610299826102c2565b91506102a4836102c2565b9250828210156102b7576102b66102fb565b5b828203905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f496e70757420616d6f756e74206973206e6f742076616c696421000000000000600082015250565b610361816102c2565b811461036c57600080fd5b5056fea26469706673582212202b78b48501dd3dca49153cb9619ab10d2ab936babccd6752404e6081c03b19ba64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCABA826 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xE92B2DC6 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF3008CD2 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x107 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x16A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 GT PUSH2 0xE9 JUMPI PUSH2 0xE8 PUSH2 0x2CC JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x0 SLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x28E JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 GT PUSH2 0x14C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143 SWAP1 PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 SLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x28E JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7 SWAP1 PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 SLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x28E JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DD DUP2 PUSH2 0x358 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9 JUMPI PUSH2 0x1F8 PUSH2 0x32A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x207 DUP5 DUP3 DUP6 ADD PUSH2 0x1CE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21D PUSH1 0x1A DUP4 PUSH2 0x27D JUMP JUMPDEST SWAP2 POP PUSH2 0x228 DUP3 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23C DUP2 PUSH2 0x2C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25B DUP2 PUSH2 0x210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x277 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299 DUP3 PUSH2 0x2C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A4 DUP4 PUSH2 0x2C2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2B7 JUMPI PUSH2 0x2B6 PUSH2 0x2FB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x496E70757420616D6F756E74206973206E6F742076616C696421000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x361 DUP2 PUSH2 0x2C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B PUSH25 0xB48501DD3DCA49153CB9619AB10D2AB936BABCCD6752404E60 DUP2 0xC0 EXTCODESIZE NOT 0xBA PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "56:629:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;331:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;112:213;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;526:157;580:4;612:1;602:7;:11;595:19;;;;:::i;:::-;;645:7;635;;:17;;;;:::i;:::-;625:7;:27;;;;669:7;;662:14;;526:157;;;:::o;331:189::-;386:4;419:1;409:7;:11;401:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;482:7;472;;:17;;;;:::i;:::-;462:7;:27;;;;506:7;;499:14;;331:189;;;:::o;112:213::-;166:4;194:1;184:7;:11;181:76;;;210:36;;;;;;;;;;:::i;:::-;;;;;;;;181:76;287:7;277;;:17;;;;:::i;:::-;267:7;:27;;;;311:7;;304:14;;112:213;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:366::-;629:3;650:67;714:2;709:3;650:67;:::i;:::-;643:74;;726:93;815:3;726:93;:::i;:::-;844:2;839:3;835:12;828:19;;487:366;;;:::o;859:118::-;946:24;964:5;946:24;:::i;:::-;941:3;934:37;859:118;;:::o;983:419::-;1149:4;1187:2;1176:9;1172:18;1164:26;;1236:9;1230:4;1226:20;1222:1;1211:9;1207:17;1200:47;1264:131;1390:4;1264:131;:::i;:::-;1256:139;;983:419;;;:::o;1408:222::-;1501:4;1539:2;1528:9;1524:18;1516:26;;1552:71;1620:1;1609:9;1605:17;1596:6;1552:71;:::i;:::-;1408:222;;;;:::o;1717:169::-;1801:11;1835:6;1830:3;1823:19;1875:4;1870:3;1866:14;1851:29;;1717:169;;;;:::o;1892:191::-;1932:4;1952:20;1970:1;1952:20;:::i;:::-;1947:25;;1986:20;2004:1;1986:20;:::i;:::-;1981:25;;2025:1;2022;2019:8;2016:34;;;2030:18;;:::i;:::-;2016:34;2075:1;2072;2068:9;2060:17;;1892:191;;;;:::o;2089:77::-;2126:7;2155:5;2144:16;;2089:77;;;:::o;2172:180::-;2220:77;2217:1;2210:88;2317:4;2314:1;2307:15;2341:4;2338:1;2331:15;2358:180;2406:77;2403:1;2396:88;2503:4;2500:1;2493:15;2527:4;2524:1;2517:15;2667:117;2776:1;2773;2766:12;2790:176;2930:28;2926:1;2918:6;2914:14;2907:52;2790:176;:::o;2972:122::-;3045:24;3063:5;3045:24;:::i;:::-;3038:5;3035:35;3025:63;;3084:1;3081;3074:12;3025:63;2972:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "186600",
								"executionCost": "22338",
								"totalCost": "208938"
							},
							"external": {
								"deductBalAssert(uint256)": "infinite",
								"deductBalRequire(uint256)": "infinite",
								"deductBalRevert(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 685,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 685,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 685,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 102,
									"end": 105,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 87,
									"end": 105,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 87,
									"end": 105,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 685,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 685,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 685,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 56,
									"end": 685,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 685,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56,
									"end": 685,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 685,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 685,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56,
									"end": 685,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 685,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56,
									"end": 685,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56,
									"end": 685,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 685,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 685,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 685,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 685,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56,
									"end": 685,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 685,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202b78b48501dd3dca49153cb9619ab10d2ab936babccd6752404e6081c03b19ba64736f6c63430008070033",
									".code": [
										{
											"begin": 56,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "CABA826"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "E92B2DC6"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "F3008CD2"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 685,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 526,
											"end": 683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 580,
											"end": 584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 612,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 602,
											"end": 609,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 602,
											"end": 613,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 595,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 595,
											"end": 614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 595,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 595,
											"end": 614,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 595,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 595,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 614,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 595,
											"end": 614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 645,
											"end": 652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 635,
											"end": 642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 635,
											"end": 652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 635,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 635,
											"end": 652,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 652,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 635,
											"end": 652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 625,
											"end": 632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 625,
											"end": 652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 625,
											"end": 652,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 625,
											"end": 652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 669,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 662,
											"end": 676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 526,
											"end": 683,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 331,
											"end": 520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 386,
											"end": 390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 420,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 409,
											"end": 416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 409,
											"end": 420,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 401,
											"end": 451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 401,
											"end": 451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 401,
											"end": 451,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 401,
											"end": 451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 401,
											"end": 451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 401,
											"end": 451,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 401,
											"end": 451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 482,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 479,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 472,
											"end": 489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 472,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 472,
											"end": 489,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 472,
											"end": 489,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 472,
											"end": 489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 462,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 462,
											"end": 489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 462,
											"end": 489,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 462,
											"end": 489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 506,
											"end": 513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 499,
											"end": 513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 499,
											"end": 513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 520,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 112,
											"end": 325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 166,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 184,
											"end": 191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 184,
											"end": 195,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 181,
											"end": 257,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 181,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 181,
											"end": 257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 210,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 210,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 210,
											"end": 246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 210,
											"end": 246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 210,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 210,
											"end": 246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 210,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 210,
											"end": 246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 210,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 210,
											"end": 246,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 210,
											"end": 246,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 210,
											"end": 246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 210,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 210,
											"end": 246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 210,
											"end": 246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 210,
											"end": 246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 210,
											"end": 246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 210,
											"end": 246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 181,
											"end": 257,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 181,
											"end": 257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 277,
											"end": 284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 277,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 277,
											"end": 294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 277,
											"end": 294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 277,
											"end": 294,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 277,
											"end": 294,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 277,
											"end": 294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 267,
											"end": 294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 294,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 267,
											"end": 294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 311,
											"end": 318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 304,
											"end": 318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 112,
											"end": 325,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 487,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 629,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 714,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 709,
											"end": 712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 650,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 650,
											"end": 717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 643,
											"end": 717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 643,
											"end": 717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 726,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 815,
											"end": 818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 726,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 726,
											"end": 819,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 726,
											"end": 819,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 726,
											"end": 819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 844,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 835,
											"end": 847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 828,
											"end": 847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 828,
											"end": 847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 853,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 853,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 859,
											"end": 977,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 859,
											"end": 977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 946,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 964,
											"end": 969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 946,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 946,
											"end": 970,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 946,
											"end": 970,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 946,
											"end": 970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 941,
											"end": 944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 934,
											"end": 971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 859,
											"end": 977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 859,
											"end": 977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 859,
											"end": 977,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1176,
											"end": 1185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1172,
											"end": 1190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1190,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1226,
											"end": 1246,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1222,
											"end": 1223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1264,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 983,
											"end": 1402,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1537,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1620,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1605,
											"end": 1622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1552,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1630,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1879,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1870,
											"end": 1873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1866,
											"end": 1880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1886,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1892,
											"end": 2083,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1892,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1932,
											"end": 1936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1970,
											"end": 1971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1952,
											"end": 1972,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1952,
											"end": 1972,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1952,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1972,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2004,
											"end": 2005,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1986,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2027,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2050,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2016,
											"end": 2050,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2030,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2030,
											"end": 2048,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2030,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2030,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2050,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2016,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2083,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2083,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2083,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2089,
											"end": 2166,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2089,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2166,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2172,
											"end": 2352,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2172,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2297,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2321,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2314,
											"end": 2315,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2307,
											"end": 2322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2345,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2331,
											"end": 2346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2538,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2358,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2483,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2484,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2507,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2500,
											"end": 2501,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2493,
											"end": 2508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2527,
											"end": 2531,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2524,
											"end": 2525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2532,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 2784,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2667,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2778,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2790,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2958,
											"name": "PUSH",
											"source": 1,
											"value": "496E70757420616D6F756E74206973206E6F742076616C696421000000000000"
										},
										{
											"begin": 2926,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2907,
											"end": 2959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2966,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2972,
											"end": 3094,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2972,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3063,
											"end": 3068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3045,
											"end": 3069,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3045,
											"end": 3069,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3045,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3038,
											"end": 3043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3070,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3025,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3025,
											"end": 3088,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3086,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3025,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3025,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3094,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"deductBalAssert(uint256)": "0caba826",
							"deductBalRequire(uint256)": "e92b2dc6",
							"deductBalRevert(uint256)": "f3008cd2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deductBalAssert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deductBalRequire\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deductBalRevert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ErrorHandler.sol\":\"ErrorHandlerDemo\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ErrorHandler.sol\":{\"keccak256\":\"0xdd7bd44a7c81a6b856b266962bc32b45f0c1813ee7bba34c04ee2858c1c9f7a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ce0b00a21c3e8883ef30e85fb7eb32a02081b4a143370ac959be420bd6aea18\",\"dweb:/ipfs/QmVwCuh5cMLEQGu32q4V6uy981vKWWMnto55RvPfBP7Pn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/ErrorHandler.sol:ErrorHandlerDemo",
								"label": "balance",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ErrorHandler.sol": {
				"ast": {
					"absolutePath": "contracts/ErrorHandler.sol",
					"exportedSymbols": {
						"ErrorHandlerDemo": [
							75
						]
					},
					"id": 76,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 75,
							"linearizedBaseContracts": [
								75
							],
							"name": "ErrorHandlerDemo",
							"nameLocation": "65:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "92:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 75,
									"src": "87:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "87:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "102:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "171:154:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 11,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "184:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "32",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "194:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "184:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 19,
												"nodeType": "IfStatement",
												"src": "181:76:0",
												"trueBody": {
													"id": 18,
													"nodeType": "Block",
													"src": "196:61:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "496e70757420616d6f756e74206973206e6f742076616c696421",
																		"id": 15,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "217:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb",
																			"typeString": "literal_string \"Input amount is not valid!\""
																		},
																		"value": "Input amount is not valid!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb",
																			"typeString": "literal_string \"Input amount is not valid!\""
																		}
																	],
																	"id": 14,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "210:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "210:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 17,
															"nodeType": "ExpressionStatement",
															"src": "210:36:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 20,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "267:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 21,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 22,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "287:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "277:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "267:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "267:27:0"
											},
											{
												"expression": {
													"id": 26,
													"name": "balance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 10,
												"id": 27,
												"nodeType": "Return",
												"src": "304:14:0"
											}
										]
									},
									"functionSelector": "f3008cd2",
									"id": 29,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deductBalRevert",
									"nameLocation": "121:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "142:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "137:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "137:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "136:14:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "166:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "166:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "165:6:0"
									},
									"scope": 75,
									"src": "112:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "391:129:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 37,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "409:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "419:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "409:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e70757420616d6f756e74206973206e6f742076616c696421",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "422:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb",
																"typeString": "literal_string \"Input amount is not valid!\""
															},
															"value": "Input amount is not valid!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da1b5e8c093c66219a53d96d652faa765575d2ec3e5486fb72a1336da45c3deb",
																"typeString": "literal_string \"Input amount is not valid!\""
															}
														],
														"id": 36,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "401:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "401:50:0"
											},
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "462:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 44,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "472:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 45,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "482:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "472:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "462:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "462:27:0"
											},
											{
												"expression": {
													"id": 49,
													"name": "balance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 35,
												"id": 50,
												"nodeType": "Return",
												"src": "499:14:0"
											}
										]
									},
									"functionSelector": "e92b2dc6",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deductBalRequire",
									"nameLocation": "340:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "362:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "357:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "357:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:14:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "386:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "386:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "385:6:0"
									},
									"scope": 75,
									"src": "331:189:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "585:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 60,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "602:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "612:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "602:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 59,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "595:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "595:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "595:19:0"
											},
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "625:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 66,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "635:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 67,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "635:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "625:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "625:27:0"
											},
											{
												"expression": {
													"id": 71,
													"name": "balance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 58,
												"id": 72,
												"nodeType": "Return",
												"src": "662:14:0"
											}
										]
									},
									"functionSelector": "0caba826",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deductBalAssert",
									"nameLocation": "535:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "556:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "551:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "551:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "550:14:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "580:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "580:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:6:0"
									},
									"scope": 75,
									"src": "526:157:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 76,
							"src": "56:629:0",
							"usedErrors": []
						}
					],
					"src": "31:654:0"
				},
				"id": 0
			}
		}
	}
}